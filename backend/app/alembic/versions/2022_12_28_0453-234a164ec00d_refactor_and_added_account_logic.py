"""refactor_and_added_account_logic

Revision ID: 234a164ec00d
Revises: 178607d97de1
Create Date: 2022-12-28 04:53:24.131936+00:00

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '234a164ec00d'
down_revision = '178607d97de1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('item_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_item_category_id'), 'item_category', ['id'], unique=False)
    op.create_table('payment_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payment_category_id'), 'payment_category', ['id'], unique=False)
    op.create_table('payment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['payment_category.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payment_id'), 'payment', ['id'], unique=False)
    op.create_table('user_account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('sum', sa.Float(), nullable=True),
    sa.Column('bonuses', sa.Float(), nullable=True),
    sa.Column('card_number', sa.String(length=16), nullable=False),
    sa.Column('kind', sa.Enum('JUSAN', 'OTHER', name='cardkind'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_account_id'), 'user_account', ['id'], unique=False)
    op.create_table('transaction_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('sum', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('item_id', sa.Integer(), nullable=True),
    sa.Column('recipient_id', sa.Integer(), nullable=True),
    sa.Column('payment_id', sa.Integer(), nullable=True),
    sa.Column('kind', sa.Enum('TRANSFER', 'PURCHASE', 'PAYMENT', name='transactionlogkind'), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], ),
    sa.ForeignKeyConstraint(['payment_id'], ['payment.id'], ),
    sa.ForeignKeyConstraint(['recipient_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transaction_log_id'), 'transaction_log', ['id'], unique=False)
    op.add_column('item', sa.Column('image_url', sa.String(length=555), nullable=True))
    op.add_column('item', sa.Column('bonus_percent', sa.Float(), nullable=True))
    op.add_column('item', sa.Column('category_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'item', 'item_category', ['category_id'], ['id'])
    op.add_column('order', sa.Column('sum', sa.Integer(), nullable=True))
    op.drop_column('order', 'address')
    op.drop_column('order', 'status')
    op.add_column('orders_items', sa.Column('quantity', sa.Integer(), nullable=True))
    op.add_column('orders_items', sa.Column('sum', sa.Integer(), nullable=True))
    op.add_column('user', sa.Column('avatar_url', sa.String(length=555), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user', 'avatar_url')
    op.drop_column('orders_items', 'sum')
    op.drop_column('orders_items', 'quantity')
    op.add_column('order', sa.Column('status', postgresql.ENUM('WAITING', 'PURCHASED', 'CANCELED', name='orderstatus'), autoincrement=False, nullable=False))
    op.add_column('order', sa.Column('address', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.drop_column('order', 'sum')
    op.drop_constraint(None, 'item', type_='foreignkey')
    op.drop_column('item', 'category_id')
    op.drop_column('item', 'bonus_percent')
    op.drop_column('item', 'image_url')
    op.drop_index(op.f('ix_transaction_log_id'), table_name='transaction_log')
    op.drop_table('transaction_log')
    op.drop_index(op.f('ix_user_account_id'), table_name='user_account')
    op.drop_table('user_account')
    op.drop_index(op.f('ix_payment_id'), table_name='payment')
    op.drop_table('payment')
    op.drop_index(op.f('ix_payment_category_id'), table_name='payment_category')
    op.drop_table('payment_category')
    op.drop_index(op.f('ix_item_category_id'), table_name='item_category')
    op.drop_table('item_category')
    # ### end Alembic commands ###
